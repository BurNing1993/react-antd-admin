{"version":3,"sources":["utils/request.ts","store/index.ts","store/user.ts","App.tsx","api/user.ts","mock/user.ts","index.tsx"],"names":["request","axios","create","interceptors","response","use","data","error","console","log","message","toString","Promise","reject","store","user","action","bound","this","userInfo","name","observable","App","s","useLocalStore","useEffect","a","async","url","method","username","password","res","useObserver","className","type","Mock","mock","options","ReactDOM","render","document","getElementById"],"mappings":"wOAGMA,E,OAAyBC,EAAMC,OAAO,IAM5CF,EAAQG,aAAaC,SAASC,KAAI,SAAUD,GAC1C,OAAOA,EAASE,QACf,SAAUC,GAGX,OAFAC,QAAQC,IAAIF,GACZG,EAAA,EAAQH,MAAMA,EAAMI,YACbC,QAAQC,OAAON,MAGTP,Q,kECXAc,EAJD,CACZC,KCaW,I,EARVC,IAAOC,M,8MAENC,KAAKC,SAAS,CACZC,KAAK,Q,8FARRC,K,wEACU,CACTD,KAAK,W,sHCwBME,G,OArBO,WACpB,IAAMC,EAAIC,aAAc,kBAAMV,KAY9B,OAVAW,qBAAU,YACR,WAAC,QAAAC,EAAAC,OAAA,2EAAAD,EAAA,MCHI1B,EAAQ,CACb4B,IAAK,aACLC,OAAQ,OACRvB,KDE4B,CAAEwB,SAAU,GAAIC,SAAU,OAFrD,OAESC,EAFT,OAGGxB,QAAQC,IAAIuB,GAHf,gDAKGxB,QAAQC,IAAR,MALH,wDAAD,KAQC,IACIwB,aAAY,kBACjB,yBAAKC,UAAU,OACZX,EAAER,KAAKI,SAASC,KACjB,uBAAQe,KAAK,WAAb,gB,iBErBNC,IAAKC,KAAK,aAAc,QAAQ,SAAUC,GACxC,OAAOF,IAAKC,KAAK,CACf,cAAe,SCGnBE,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.9b28a025.chunk.js","sourcesContent":["import axios, { AxiosInstance } from 'axios'\nimport { message } from 'antd';\n\nconst request: AxiosInstance = axios.create({\n  // baseURL: baseURL, // url = base url + request url\n  // withCredentials: true, // send cookies when cross-domain requests\n  // timeout: 5000 // request timeout\n})\n\nrequest.interceptors.response.use(function (response) {\n  return response.data;\n}, function (error) {\n  console.log(error);\n  message.error(error.toString());\n  return Promise.reject(error);\n});\n\nexport default request;","import user from './user'\n\nconst store = {\n  user,\n}\n\nexport default store;","import { observable,action } from 'mobx'\n\nclass User {\n  @observable\n  userInfo = {\n    name:'name'\n  }\n\n  @action.bound\n  async getUserInfo(){\n    this.userInfo={\n      name:'Joey'\n    }\n  }\n}\n\nconst user = new User()\n\nexport default user;","import React, { useEffect } from 'react';\nimport { Button } from 'antd';\nimport { login } from './api/user';\nimport { useObserver, useLocalStore } from 'mobx-react';\nimport store from './store';\n\nimport './App.css';\n\nconst App: React.FC = () => {\n  const s = useLocalStore(() => store);\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const res = await login({ username: '', password: '' });\n        console.log(res);\n      } catch (error) {\n        console.log(error);\n      }\n    })();\n  }, []);\n  return useObserver(() => (\n    <div className=\"App\">\n      {s.user.userInfo.name}\n      <Button type=\"primary\">Button</Button>\n    </div>\n  ));\n};\n\nexport default App;\n","import { AxiosPromise } from 'axios'\nimport request from '../utils/request'\n\nexport interface loginData {\n  username: string,\n  password: string,\n}\n\nexport function login(data: loginData): AxiosPromise {\n  return request({\n    url: '/api/login',\n    method: 'POST',\n    data,\n  })\n}","import Mock from 'mockjs';\nimport { XMLHttpRequest } from './index';\n\nMock.mock('/api/login', 'post', function (options: XMLHttpRequest): Object {\n  return Mock.mock({\n    'token|1-100': 100\n  })\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n// mock\nimport './mock'\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}